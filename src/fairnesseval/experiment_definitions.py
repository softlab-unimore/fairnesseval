RANDOM_SEEDs_RESTRICTED_V1 = [1]

TRAIN_FRACTIONS_SMALLER_DATASETS_v1 = [0.063, 0.251, 1.]
TRAIN_FRACTIONS_v1 = [0.001, 0.004, 0.016, 0.063, 0.251, 1]  # np.geomspace(0.001,1,7) np.linspace(0.001,1,7)
BASE_EPS_V1 = [0.005]
EPS_LIST_V2: list[float] = [0.001, .005, 0.01, 0.02, 0.05, 0.10, 0.15]
sigmod_datasets = ['adult_sigmod', 'compas', 'german', ]
DEMO_RESULTS_PATH = '../../streamlit/demo_results'

experiment_definitions = [
    {'experiment_id': 'demo.A.1r',
     'dataset_names': ['adult_sigmod'],
     'model_names': [ 'ThresholdOptimizer', 'Feld', 'ZafarDI',],
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'constraint_code': 'dp',
     'params': ['--debug'],
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.D.0r',
     'dataset_names': sigmod_datasets,
     'model_names': ['fairlearn'],
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'constraint_code': 'dp',
     'train_fractions': TRAIN_FRACTIONS_SMALLER_DATASETS_v1,
     'model_params': {'eps': BASE_EPS_V1},
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.D.1r',
     'dataset_names': sigmod_datasets,
     'model_names': ['LogisticRegression'],
     'random_seeds': [0],
     'train_fractions': TRAIN_FRACTIONS_SMALLER_DATASETS_v1,
     'results_path': DEMO_RESULTS_PATH,
     },
    {
        'experiment_id': 'demo.0.test',
        'dataset_names': ('adult_sigmod',),
        'model_names': ('LogisticRegression',),
        'random_seeds': RANDOM_SEEDs_RESTRICTED_V1,
        'results_path': DEMO_RESULTS_PATH
    },
    {
        "experiment_id": "demo.2.test",
        "dataset_names": ["compas", "german"],
        "model_names": ["LogisticRegression"],
        "random_seeds": RANDOM_SEEDs_RESTRICTED_V1,
        "train_fractions": TRAIN_FRACTIONS_SMALLER_DATASETS_v1,
        "results_path": DEMO_RESULTS_PATH,
        "params": ["--debug"],
    },
    {
        'experiment_id': 'demo.1.test',
        'dataset_names': ['adult_sigmod_no_SA', 'compas_no_SA'],
        'model_names': ['fairlearn'],
        'random_seeds': [1],
        'model_params': {'eps': [0.005, 0.15],
                         'constraint_code': 'dp',
                         'base_model_code': 'lr',
                         'eta0': [2.0],
                         'run_linprog_step': [False],
                         'max_iter': [25, 50],
                         'base_model_grid_params': dict(
                             solver=[  # 'newton-cg', 'liblinear',
                                 'lbfgs'],
                             penalty=['l2'
                                      ],
                             C=[0.01, 1, 1000],
                             # [10, 1.0, 0.1, 0.05, 0.01],
                             max_iter=[200],
                         )
                         },
        'results_path': DEMO_RESULTS_PATH,
        'train_test_fold': [0],
        'params': ['--debug']
    },
    {
        "experiment_id": "demo.x.test",
        'dataset_names': ['adult_sigmod'],
        'model_names': ['LogisticRegression'],
        'random_seeds': RANDOM_SEEDs_RESTRICTED_V1,
        'results_path': DEMO_RESULTS_PATH,
    },
    {'experiment_id': 'demo.0',
     'dataset_names': ['ACSIncome'],
     'model_names': ['hybrids', 'ThresholdOptimizer'],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'train_test_fold': [0],
     'constraint_code': 'dp',
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.0.1',
     'dataset_names': ['ACSIncome'],
     'model_names': ['hybrids', 'ThresholdOptimizer'],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0, 1],
     'constraint_code': 'dp',
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.1',
     'dataset_names': ['ACSIncome'],
     'model_names': ['ZafarDI', 'ZafarEO', 'Feld', ],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'train_test_fold': [0],
     'constraint_code': 'dp',
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.2',
     'dataset_names': ['ACSIncome'],
     'model_names': ['ThresholdOptimizer', 'ZafarDI', 'ZafarEO', 'Feld', 'hybrids', ],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'train_fractions': [1 / 4],
     'train_test_fold': [0],
     'constraint_code': 'dp',
     'states': ['CA'],
     'params': ['--debug'],
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.2t',
     'dataset_names': ['ACSIncome'],
     'model_names': ['ThresholdOptimizer', 'ZafarEO', 'Feld', ],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'train_test_fold': [0],
     'constraint_code': 'dp',
     'states': ['LA'],
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.2r',
     'dataset_names': ['ACSIncome'],
     'model_names': ['hybrids', 'ThresholdOptimizer', 'ZafarDI', 'ZafarEO', 'Feld', ],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'constraint_code': 'dp',
     'states': ['LA'],
     'results_path': DEMO_RESULTS_PATH,
     },

    {'experiment_id': 'demo.2.1r',
     'dataset_names': ['ACSIncome'],
     'model_names': ['ThresholdOptimizer', ],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'constraint_code': 'dp',
     'states': ['CA'],
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.A.2r',
     'dataset_names': ['adult_sigmod'],
     'model_names': ['hybrids', ],
     'eps': BASE_EPS_V1,
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'constraint_code': 'dp',
     'params': ['--debug'],
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.C.0r',
     'dataset_names': sigmod_datasets,
     'model_names': ['hybrids', ],
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'train_test_fold': [0],
     'constraint_code': 'dp',
     'model_params': {'eps': [EPS_LIST_V2]},
     'results_path': DEMO_RESULTS_PATH,
     },
    {'experiment_id': 'demo.C.1r',
     'dataset_names': ['ACSIncome'],
     'model_names': ['hybrids', ],
     'base_model_code': ['lr'],
     'random_seeds': [0],
     'train_test_seeds': [0],
     'constraint_code': 'dp',
     'states': ['LA'],
     'model_params': {'eps': [EPS_LIST_V2]},
     'results_path': DEMO_RESULTS_PATH,
     },

]
